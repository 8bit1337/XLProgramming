REM *** INITIALIZE ***
100 ESC=28 : UP=14 : LEFT=11 : DOWN=13 : RIGHT=7 : SI=18 : STAGE(SI)
105 PLAYER = 1 : DOOR=4 : LASER1=7 : FUSEBOX1=10 : FUSE1=13 : KEYHOLE1=16
110 DIM CS$(88)

REM --- Move the top of memory back ---
120 MEMTOP = PEEK(106)
130 NEW_MEMTOP=MEMTOP-16
140 POKE 106,NEW_MEMTOP
150 GRAPHICS 2+16

REM --- Create our new character set ---
160 SC=DPEEK(88)
170 CHRAM=NEW_MEMTOP
180 CHROM=PEEK(756)
190 POKE 756,CHRAM
200 MOVE CHROM*256,CHRAM*256,1024

REM ATASCII 86-90 (V-Z)
210 CS$ = "\E7\C3\99\BD\BD\AD\BD\BD\FB\FB\00\DF\DF\DF\00\FB\E7\C3\81\81\81\81\81\81\FF\E7\C3\C3\C3\C3\E7\FF\FF\FF\C3\81\81\C3\FF\FF"
220 MOVE ADR(CS$),CHRAM*256+(86-32)*8,40

REM ATASCII 0-10
230 CS$ = "\7E\81\81\A5\7E\3C\7E\5A\7E\A5\81\81\7E\3C\7E\5A\7E\81\A9\81\7E\38\7C\54\7E\81\95\81\7E\1C\3E\2A\E7\E3\F1\38\1C\8F\C7\E7\E7\C7\8F\1C\38\F1\E3\E7\03\07\0E\1C\38\70\E0\C0\C0\E0\70\38\1C\0E\07\03\3C\18\81\C3\E7\E7\E7\E7\E7\E7\E7\E7\E7\81\18\3C\FC\F8\F1\03\03\F1\F8\FC"
240 MOVE ADR(CS$),CHRAM*256+(0+64)*8,88

REM ATASCII 11-21
250 CS$ = "\3F\1F\8F\C0\C0\8F\1F\3F\00\00\00\18\18\00\00\00\FF\99\81\C3\C3\81\99\FF\FF\99\81\DB\DB\81\99\FF\00\7E\5A\5A\18\18\18\18\18\18\18\18\5A\42\7E\00\00\0E\02\FA\FA\02\0E\00\00\00\00\FF\FF\00\00\00\00\70\40\5F\5F\40\70\00\AA\55\AA\55\AA\55\AA\55\E7\81\BD\24\24\BD\81\E7"
260 MOVE ADR(CS$),CHRAM*256+(11+64)*8,88

REM --- Set colours:  upper=gray, lower=cyan, inverse upper = red/pink, inverse lower = brown ---
270 POKE 708, 8
280 POKE 709, 132
290 POKE 710, 70
300 POKE 711, 244

REM --- Draw background ---
310 EXEC SETUP_PLAYFIELD

REM *** GAME LOOP ***
REM Put code here for RESTORE 9000 to bring data statements back to level 1, and setup the 'Press button to start' text

REM *** BEGIN STAGE ***
320 FOR I = 0 to SI : READ A : STAGE(I)=A : NEXT I
330 POSITION 3,4 : PRINT #6;STAGE(0)
340 FOR I = 1 to SI STEP 3
350   POSITION STAGE(I+1), STAGE(I+2) : PRINT #6;STAGE(I
360 NEXT I

REM *** GAME LOOP ***
370 NEWX = STAGE(PLAYER+1) : NEWY = STAGE(PLAYER+2) : MOVED = 1 : FIRST = 1 : STARTTIME = TIME/60
380 EXEC MOVE_PLAYER

460 WHILE PEEK(764)<>ESC
470   CURRTIME = INT(TIME/60-STARTTIME)
480   EXEC UPDATE_PROGRESS

REM   -- Button has been pushed --
REM      IF STRING(0)=0
REM        IF STICK(0)=LEFT
REM          REM FIRE LEFT PORTAL
REM        IF STICK(0)=RIGHT
REM          REM FIRE RIGHT PORTAL
REM      ENDIF

490   IF STICK(0)=UP
500     MOVED = 1 : NEWY=STAGE(PLAYER+2)-1 : STAGE(PLAYER)=1 : ENDIF
510   IF STICK(0)=LEFT
520     MOVED = 1 : NEWX=STAGE(PLAYER+1)-1 : STAGE(PLAYER)=2 : ENDIF
540   IF STICK(0)=DOWN
550     MOVED = 1 : NEWY=STAGE(PLAYER+2)+1 : STAGE(PLAYER)=0 : ENDIF
570   IF STICK(0)=RIGHT
580     MOVED = 1 : NEWX=STAGE(PLAYER+1)+1 : STAGE(PLAYER)=3 : ENDIF
  
590   NADDR = SC+(20*NEWY+NEWX)
600   NVAL = PEEK(NADDR)

REM   -- Stage Complete! --
REM  IF NVAL=56 : stage completed!

REM   -- Player Dies! --
650   IF NVAL>=225 AND NVAL<=332 : REM -- character dies!
655     X = NEWX-2:IF X>6:X=6:ENDIF
656     Y = NEWY-1:IF Y<0:Y=0:ENDIF
660     POSITION X+8,Y:PRINT #6;"@!#?@!"
665     EXEC MOVE_PLAYER
670     WHILE PEEK(764)<>ESC:WEND
680     EXIT
690   ENDIF
      
REM   -- Can't Move Here --
700   IF NVAL>=33 AND NVAL<=122
710     NEWY=Y : NEWX = X : MOVED = 0
720   ENDIF  
  
730   EXEC MOVE_PLAYER

WEND
POKE 106,MEMTOP
GR.0
END

REM *** STAGE INFORMATION ***
REM   STAGE , PLAYER  , DOOR    , LASER1  , FUSEBOX1 , FUSE1   , KEYHOLE1
9001 DATA 1 , 1,14,10 , 86,16,0 , 16,11,7 , 13,11,8  , 12,12,8 , 21,11,2

REM   *** SETUP_PLAYFIELD ***
10000 PROC SETUP_PLAYFIELD
10010   POSITION 1,0:PRINT #6;"\C5\D3\E3\C1\D0\C5"
10020   POSITION 1,2:PRINT #6;"stage"
10040   POSITION 1,5:PRINT #6;"steps"
10060   POSITION 1,8:PRINT #6;"clock"

10080   FOR I = 1 to 12
10090     POSITION 7+I,0:PRINT #6;"\F7"
10100     POSITION 7+I,11:PRINT #6;"\F7"
10110   NEXT I

10120   FOR I = 1 to 10
10130     POSITION 8,I:PRINT #6;"\F7"
10140     POSITION 19,I:PRINT #6;"\F7"
10150   NEXT I
ENDPROC

REM   *** UPDATE_PROGRESS ***
10300 PROC UPDATE_PROGRESS
10310   POSITION 2,9:PRINT #6;CURRTIME
10320   POSITION 2,6:PRINT #6;STEPS
ENDPROC

REM   *** MOVE_PLAYER ***
10500 PROC MOVE_PLAYER
10510   IF MOVED = 1
10520     IF FIRST = 0 : REMark -- Print the old character in the spot the player is moving from
10530       POKE UADDR,UVAL
10540       STEPS = STEPS + 1
10570     ELSE
10580       FIRST = 0
10590     ENDIF

          REM -- Store whatever is currently at NEWX/NEWY in U$ so that we can re-show it later
10600     UADDR = SC+(20*NEWY+NEWX+8)
10610     UVAL = PEEK(UADDR)

          REM -- Print the appropriate player graphic at NEWX/NEWY
10620     POSITION NEWX+8,NEWY : PRINT #6;P$
10630     X=NEWX:Y=NEWY

10660     MOVED = 0
10670   ENDIF
ENDPROC


REM *** LEVEL 1 NEW ***
REM DIM B$(1)  : REM The default border style, f or u
REM DIM L1$(3) : REM stores the type of laser base, and where it's located
REM DIM P$(1)  : REM an array to store what exists under the player
REM B$="u"
REM P=94
REM D=6
REM L1$="\F983":REM Laser pointing up, at position 82


REM *** Things I think I can do to make levels easier to build ***
REM Default outline = f or u
REM Just place objects through graphics
REM Variable to track where player starts, needs to keep track of what is under him at start
REM Variable specifically for lasers.  Limit how many there are.
REM Lasers should have specific functions:  open doors, create pf spots, eliminate hazards


