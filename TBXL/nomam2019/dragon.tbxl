REM DRAGON TRAINING
REM by Jason Gruetzmacher, 2019

REM G$ holds the graphics, L$ has the X/Y locations for where the square/bats go.
000 DIM G$(36),L$(14)
010 B=ADR(G$)
020 S=B+7
030 D=S+5
040 X1=ADR(L$)
050 Y1=X1+7
060 XS=114
070 YS=52

REM We're going to use the fact that the Square and Dragon End/Start with two 0s to save a couple of characters
REM G$="\Bat(0-6)            \Square(7-13)  \olap \Dragon(12-35)                                                    "
080 G$="\81\81\C3\C3\FF\5A\66\00\00\1C\1C\1C\00\00\06\0F\F3\FE\0E\04\04\1E\3F\7F\E3\C3\C3\C7\FF\3C\08\8F\E1\3F\00\00"
REM L$=" X1 X2 X3 X4 X1 X2 X3 Y1 Y2 Y3 Y4 Y1 Y2 Y3
100 L$="\38\38\A8\A8\38\38\A8\18\60\18\60\18\60\18"


REM N=Page for top of memory.  N*256 is beginning address for P/M Graphics
REM P=PMBASE+384, which is where the address for Missile 0 starts
110 GR.19:N=PEEK(106)-8:POKE 54279,N:P=N*256+384
120 POKE 559,46:REM DMACTL: Set to double resolution
130 POKE 53277,3:REM GRACTL: Enable P/M Graphics
200 POKE 623,16:REM Turn missiles into player 5 so that we can use a 5th colour
210 POKE 752,1:REM Turn the cursor off and clear the screen
220 POKE 704,28:REM Yellow for Square
230 FOR I=705 TO 707:POKE I,0:NEXT I:REM Black for the three bats
240 POKE 711,72:REM Red for Dragon
250 POKE 712,10:REM Grey for PF

REM BEGINNING OF GAME LOOP

REM Draw playfield
REM Start with gold rectangle, use PAINT to fill in the right, and then TEXT to display our score
REM I don't need to do this full bit before each game, but because it has to fit on 10 lines it works
300 COLOR 1:PLOT 0,0:DRAWTO 0,23:DRAWTO 33,23:DRAWTO 33,0:DRAWTO 0,0
310 PAINT 35,0
320 TEXT 33,1,S1:TEXT 33,9,S2

REM Reset scores and wait for player to press button to start
330 S1=0:S2=0
340 WHILE STRIG(0)=1:WEND

REM Now start the game loop until we miss timer or hit a bat
350 REPEAT
400   X=XS:Y=YS:REM reset dragon to default X/Y
410   COLOR 0:PLOT 34,20:DRAWTO 38,20:REM rest timer bar
420   FOR I=0 TO 639:POKE P+I,0:NEXT I:REM clear P/M graphics
REM   Z=which of the 4 spots the square will appear in
430   Z=INT(PEEK(53770)/64)
REM   draw square
440   MOVE S,P+128+PEEK(Y1+Z),7
500   POKE 53248,PEEK(X1+Z)
REM   draw bats
510   FOR I=1 TO 3:REM draw bats
520     MOVE B,P+128*(I+1)+PEEK(Y1+Z+I),7
530     POKE 53248+I,PEEK(X1+Z+I)
540   NEXT I

REM   BEGIN GAME LOOP
550   J=TIME
560   REPEAT
REM     check the timer
600     Q=TIME-J
610     IF Q>=104
620       T=2
630       GOTO 900
640     ENDIF
650     COLOR 3:PLOT 34,20:DRAWTO 34+INT(Q/26),20:REM update timer bar

REM     clear collision registers
660     POKE 53278,0

REM     move the dragon
670     K=STICK(0)
680     DX=(K>4 AND K<8)-(K>8 AND K<12)
700     DY=((K-5) MOD 4=0)-((K-6) MOD 4=0)
710     X=X+2*DX:Y=Y+2*DY
720     MOVE D,P+Y,24
730     FOR I=0 TO 3:POKE 53255-I,X+2*I:NEXT I

REM     check for a collision
800     T=PEEK(53256)!PEEK(53257)!PEEK(53258)!PEEK(53259)
810     IF T=1
820       S2=S2+1
830     ENDIF

900   UNTIL T>0:REM if T>0 then time has expired or the player has collided with a bat or the square
REM   ensure our 2 digit scoring is correct
910   IF S2=10
920     S1=S1+1
930     S2=0
940   ENDIF
REM   update score on the screen
950   TEXT 33,1,S1:TEXT 33,9,S2
960 UNTIL T>1:REM if T>1 then the game is over.  If T=1 then the player hit the square and gets to try again
REM game has ended - this loops us back to resetting the score's colours and waiting for player to start game again
999 GOTO 300

REM The Peek addresses for the horizontal position of everything
REM HPOSP0=53248
REM HPOSP1=53249
REM HPOSP2=53250
REM HPOSP3=53251
REM HPOSM0=53252

REM GRAPHICS
REM      xx
REM     xxxx
REM xxxx  xx
REM xxxxxxx
REM     xxx
REM      x
REM      x
REM    xxxx
REM   xxxxxx
REM  xxxxxxx
REM xxx   xx
REM xx    xx
REM xx    xx
REM xx   xxx
REM xxxxxxxx
REM   xxxx
REM     x
REM x   xxxx
REM xxx    x
REM   xxxxxx

REM x
REM  x
REM   x  xx
REM    xxxxx
REM    x  xx
REM     xxx
REM    xxxx
REM   x  x
REM  x   x
REM x  xxxx
REM   xxxxxx
REM  xxxxxxx
REM xxx   xx
REM xx    xx
REM xx    xx
REM xx   xxx
REM xxxxxxxx
REM   xxxx
REM     x
REM x   xxxx
REM xxx    x
REM   xxxxxx

REM x      x /81
REM x      x /81
REM xx    xx /C3
REM xx    xx /C3
REM xxxxxxxx /FF
REM  x xx x  /5A
REM  xx  xx  /66





REM There are 7 sets of X/Y coordinates in L$.  All Xs listed first, all Ys listed second
REM The last 3 X/Y coordinates are repeats of the first 3
REM The square is placed at a random X/Y coordinate in the first 4.
REM The bats are placed based on the following 3 coordinates
REM X1=56:X2=168:Y1=24:Y2=96 (in decimal)
REM L$=" X1 X2 X3 X4 X1 X2 X3 Y1 Y2 Y3 Y4 Y1 Y2 Y3