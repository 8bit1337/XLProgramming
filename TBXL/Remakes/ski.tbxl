100 DIM SCREEN$(1),PM$(1)
101 DIM LEFT$(20),CENTER$(20),RIGHT$(20),CURR$(20),CRASH$(20),ERASE$(20),DIRN(8),SCR(4),DLIST$(1)
102 DIM T$(20),TOPLINE$(20)

REM Memory addresses used when POKING
103 LINZBS=0 : HPOSP0=53248 : HPOSM0=53252 : HITCLR=53278

130 EXEC INITIALIZE

140 REM PLAYER ROUTINE
150 POKE 559,62:POKE 54279,PMBASE
160 POKE 53277,3:POKE 704,2*16+6
170 PO=1024:YP=180:XP=128
180 PM$(PO)=CHR$(0):PM$(PO+254)=CHR$(0):PM$(PO+1)=PM$(PO)
195 SCR(0)=0:SCR(1)=10:SCR(2)=4:SCR(3)=2:SCR(4)=1
200 ERASE$=CHR$(0):ERASE$(20)=CHR$(0):ERASE$(2)=ERASE$
210 LEFT$=ERASE$:CENTER$=ERASE$:RIGHT$=ERASE$:CRASH$=ERASE$
220 FOR I=0 TO 15
230   LEFT$(I+2,I+2)=CHR$(PEEK(CHSET+208+I))
240   CENTER$(I+2,I+2)=CHR$(PEEK(CHSET+224+I))
250   RIGHT$(I+2,I+2)=CHR$(PEEK(CHSET+104+I))
260   CRASH$(I+2,I+2)=CHR$(PEEK(CHSET+240+I))
270 NEXT I
280 DIRN(0)=0:DIRN(1)=20:DIRN(2)=19:DIRN(3)=21:DIRN(4)=1:FOR I=0 TO 3:DIRN(I+5)=-DIRN(I):NEXT I:DIRN(5)=-1
290 CURR$=CENTER$
295 POKE 1636,XP:POKE 203,2:SCR=0

300 DO
305   PM$(PO+YP,PO+YP+20)=CURR$
310   SCR=SCR+SCR(PEEK(0)):POKE 77,0
320   POSITION 2,0:? #6;SCR;" ";:POSITION 15,0:IF PEEK(0)<>0 THEN ? #6;(5-PEEK(0))*100
330   IF PEEK(1)<3 THEN POKE LINZBS,0:GOTO 740
340   ST=STICK(0)
350   LEFT=NOT PTRIG(1):RIGHT=NOT PTRIG(0):LR=LEFT+2*RIGHT
360   CURR$=CENTER$:XP=PEEK(1636)
370   IF LEFT THEN CURR$=LEFT$:IF LR<>OLR THEN SV=2:TI=5
380   IF RIGHT THEN CURR$=RIGHT$:IF LR<>OLR THEN SV=4:TI=5
390   IF TI>O THEN TI=TI-1:SOUND 0,SV,0,TI
400   IF LR=0 THEN SOUND 0,0,0,0:TI=0
410   OLR=L
420   UP=(ST=14 OR ST=10 OR ST=6):DOWN=(ST=5 OR ST=9 OR ST=13)
430   YP=YP-2*UP+2*DOWN:IF YP>200 THEN YP=200
440   IF YP<40 THEN YP=40
450   POKE 0,1+(YP>130)+(YP>160)+(YP>185)
460   IF PEEK(HPOSM0)=0 THEN 300
470   WHICH=INT(LOG(PEEK(HPOSM0))/LOG(2)+0.1):TEMP=PEEK(0):POKE 0,0
480   PM$(PO+YP,PO+YP+20)=ERASE$
490   POKE HITCLR,1:IF WHICH<>2 THEN 620

500 REM POINTS
510   PTR=ASC(DLIST$(8))+256*ASC(DLIST$(9))
520   LINE=INT((YP-39)/8)+1
530   COL=INT((XP-49)/8)+1
540   LOC=PTR+LINE*20+COL:SOUND 0,0,0,0
550   FOR I=0 TO 8
555     P=PEEK(LOC+DIRN(I))
560     IF P>=128 AND P<=192
570       POKE LOC+DIRN(I),O
580       SCR=SCR+(P=139)*50+(P=134)*100*(5-TEMP)
585       I=11
586       FOR W=15 TO 0 STEP -1:SOUND 0,20,10,W:NEXT W
587       NEXT I : ENDIF
590   NEXT I

610 POKE 0,TEMP:POKE HITCLR,1
615 LOOP

620 REM CRASH
630 SOUND 0,0,0,0
640 PM$(PO+YP,PO+YP+20)=CRASH$
650 FOR W=100 TO 150 STEP 2:SOUND 0,W,12,10:NEXT W
660 PM$(PO+YP,PO+YP+20)=ERASE$
670 YP=200
680 PM$(PO+YP,PO+YP+20)=CURR$
690 POKE O,1:SOUND 0,0,0,0
700 XP=INT(72+90*RND(0)):POKE 53248,XP:POKE 1636,XP
710 IF PEEK(HPOSM0)<>0 THEN POKE HITCLR,1:GOTO 700
720 POKE HITCLR,0:SCR=SCR-50:IF SCR<0 THEN SCR=0
730 GOTO 300

740 IF SCR>HSCR THEN HSCR=SCR
745 POSITION 8,0:? #6;"  HIGH ";HSCR
750 SOUND 0,0,0,0
760 SCREEN$(326,336)="press σταςτ" : REM " start" where space=heart
770 WHILE STRIG(0) : WEND

REM This seems like a weird place to re-initialize everything, so I'm going to rem it out
REM 780 EXEC INITIALIZE

800 VNTD=DPEEK(132)
810 POKE VNTD+342+26,78
820 POKE VNTD+342+28,67
830 POKE VNTD+342+39,85
840 POKE VNTD+342+43,81
850 POKE VNTD+342+51,73
860 A=USR(VNTD+23,20000,VNTD+342,365)
870 A=USR(VNTD+23,20000+52+30,20000+52,365)
880 A=USR(VNTD+23,20000+36+9,20000+36,400)

890 RESTORE 910
900 FOR A=0 TO 8:READ B:POKE 20036+A,B:NEXT A
910 DATA 173,4,208,240,4,169,0,133,0

920 FOR A=0 TO 29:READ B:POKE 20000+61+A,B:NEXT A
930 DATA 198,203,208,26,169,2,133,203
940 DATA 173,124,2,208,3,206,100,6
950 DATA 173,125,2,208,3,238,100,6
960 DATA 173,100,6,141,0,208

970 FOR A=0 TO 103:? A,PEEK(VNTD+360+A),PEEK(20000+A):NEXT A

1000 PROC INITIALIZE
1010   GRAPHICS 17:POKE HPOSP0,0:POKE LINZBS,0 : REM Horizontal position of player 0
1020   SETCOLOR 4,0,12:SETCOLOR 1,12,8:SETCOLOR 2,9,6:SETCOLOR 0,15,4
1030   POKE HITCLR,0
1040   SCRBASE=PEEK(106)-16:REM 4K BOUNDARY
1050   PMBASE=SCRBASE-8:REM 2K BOUNDARY,DOUBLE-LINE RES
1060   CHBASE=PMBASE:REM FILL UP OFFSET WITH CHARACTERS

1070   VNTD=DPEEK(132)
1080   A=USR(VNTD+90,ADR(SCREEN$),4097,4097,SCRBASE*256)
1090   A=USR(VNTD+90,ADR(PM$),2049,2049,PMBASE*256)
1100   A=USR(VNTD+90,ADR(DLIST$),40,40,VNTD+134)
1110   CHSET=CHBASE*256
1120   A=USR(VNTD+23,CHSET,VNTD+174,120):A=USR(VNTD+23,CHSET+128,57472,344):A=USR(VNTD+23,CHSET+208,VNTD+294,48)
1130   A=VNTD+377:EXEC HILO:POKE VNTD+368,HI:POKE VNTD+370,LO
1140   A=USR(VNTD+23,1649,VNTD+494,103)
1150   Z=USR(VNTD+483):REM DISABLE VBLANK
1160   POKE 756,CHBASE:RESTORE 910
1170   A=ADR(DLIST$):EXEC HILO:POKE 561,HI:POKE 560,LO
1180   DLIST$(32)=CHR$(PEEK(560)):DLIST$(33)=CHR$(PEEK(561))
1190   SCREEN$(1)=CHR$(0):SCREEN$(4095)=CHR$(0):SCREEN$(2)=SCREEN$
1200   TOPLINE$=SCREEN$
1210   A=ADR(TOPLINE$):EXEC HILO
1220   DLIST$(5,5)=CHR$(LO):DLIST$(6,6)=CHR$(HI)
1230   POKE 88,LO:POKE 89,HI
1240   POSITION 8,0:? #6;"ΣΛΙ΅";  :REM inverse "SKI!"
1250   SCREEN$(121,139)="πςεσσ βυττοξ το σλι" : REM inverse "press button to ski"  (space=heart)
1260   SCREEN$(163,178)="πυμμ€κοωστιγλ€το":SCREEN$(185,195)="φιεχ γουςσε" : REM inverse "pull joystick to" and "view course" (space=inverse heart in first string, space=heart in 2nd string)
1270   SCREEN$(403,419)="ζ€€ι€€ξ€€ι€€σ€€θ" : REM "f  i  n  i  s  h" spaces are inverse hearts
1280   A=USR(VNTD+597,ADR(SCREEN$)+480)
1290   A=SCRBASE*256
1300   A=A-20*(STICK(0)=14)+20*(STICK(0)=13)
1310   IF A>SCRBASE*256+3480 THEN A=A-20
1320   IF A<SCRBASE*256 THEN A=A+20
1330   EXEC HILO:T$=CHR$(LO):T$(2)=CHR$(HI):DLIST$(8,9)=T$
1340   IF STRIG(0)=1 THEN 1420
1350   A=SCRBASE*256+3480:EXEC HILO
1360   T$=CHR$(LO):T$(2)=CHR$(HI):DLIST$(8,9)=T$
1370   WHILE STRIG(0)
1380     POKE 66,1
1390     FOR W=1 TO 10
1400       POKE 53279,0
1410       POKE 53279,8
1420     NEXT W
1430     POKE 66,0
1440   WEND
1450   A=USR(VNTD+342,ADR(DLIST$(8)),176)
1460   SCREEN$(121,195)=SCREEN$(120)
1470 ENDPROC

2000 PROC HILO
2010   HI=INT(A/256)
2020   LO=A-HI*256
2030 ENDPROC